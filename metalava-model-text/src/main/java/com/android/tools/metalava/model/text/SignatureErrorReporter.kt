/*
 * Copyright (C) 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.tools.metalava.model.text

import com.android.tools.metalava.model.Codebase
import com.android.tools.metalava.reporter.Issues

/**
 * Provides support for reporting recoverable errors while parsing signature files.
 *
 * A recoverable error is one that is not caused by syntax issues and there is an obvious way of
 * moving past after reporting the problem, e.g. not the invalid information in the [Codebase].
 *
 * This is primarily for testing and reading historical versions which may not quite match the
 * expected format. In normal use signature files are always generated by Metalava and so should
 * always be readable by Metalava.
 */
internal interface SignatureErrorReporter {
    /** Report recoverable errors encountered while parsing. */
    fun report(issue: Issues.Issue, message: String)

    /** Report recoverable errors encountered while parsing, using [Issues.SIGNATURE_FILE_ERROR]. */
    fun report(message: String) = report(Issues.SIGNATURE_FILE_ERROR, message)
}
